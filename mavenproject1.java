/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject1;

/**
 *
 * @author Anand Jaiswar
 */
public class mavenproject1 extends javax.swing.JFrame {

    /**
     * Creates new form mavenproject1
     */
    public mavenproject1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        value = new javax.swing.JComboBox<>();
        submit = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        mcv = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Anaemia Calculator");
        jLabel1.setToolTipText("");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        value.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        value.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueActionPerformed(evt);
            }
        });

        submit.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        mcv.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mcv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LOW MCV", "NORMAL MCV", "HIGH MCV" }));
        mcv.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mcv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcvActionPerformed(evt);
            }
        });

        TextArea.setColumns(20);
        TextArea.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        TextArea.setRows(5);
        jScrollPane2.setViewportView(TextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(243, 243, 243)
                                                .addComponent(mcv, javax.swing.GroupLayout.PREFERRED_SIZE, 190,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(182, 182, 182)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                                false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(submit,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 105,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        Short.MAX_VALUE)
                                                                .addComponent(reset,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 108,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jScrollPane2,
                                                                javax.swing.GroupLayout.Alignment.LEADING,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 309,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(166, 166, 166)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                343, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(214, Short.MAX_VALUE)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mcv, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void valueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        String mcv1 = (String) mcv.getSelectedItem();
        //        mcv.setSelectedItem(null);
        String value1 = (String) value.getSelectedItem();
        //        value.setSelectedItem(null);
        TextArea.setText(null);
        if (mcv1.equals("LOW MCV") && value1.equals("Fertin Level is Normal or High")) {
            TextArea.append("Diagnosis:\n");
            TextArea.append("If Your TIBC is Normal or High then\n" + "-->Consider lead level based on history.\n" +
                    "Perform hemoglobin electrophoresis\n" +
                    " (identify variant and abnormal\n" +
                    " hemoglobins such as Sickle cell\n" +
                    " trait or B-thalassemia).\n\n" +
                    "If normal, perform bone marrow\n" +
                    " evaluation (e.g. sideroblastic\n" +
                    " anemia or rule out other causes).\n\n");
            TextArea.append("If Your TIBC is Low then\n" +
                    "-->Diagnosis: Anaemia of chronic \ndisease (ACD)");
        } else if (mcv1.equals("LOW MCV") && value1.equals("Fertin Level is Low")) {
            //                        TextArea.append("Diagnosis:\n");

            TextArea.append("Diagnosis: Iron deficiency anemia");
        } else if (mcv1.equals("NORMAL MCV") && value1.equals("Increased Reticulocyte count")) {
            TextArea.append("Diagnosis:\n");

            TextArea.append("Acute blood loss\n" +
                    "Hemolysis\n" +
                    "Splenic sequestration.");
        } else if (mcv1.equals("NORMAL MCV") && value1.equals("Low Reticulocyte count")) {
            TextArea.append("Diagnosis:\n");

            TextArea.append("If Your WBC-Patelets are Low then \n" + "-->Bone marrow failure\n" +
                    "Aplastic anemia\n" +
                    "Leukemia.\n\n");
            TextArea.append("If Your WBC-Patelets are High \nor Medium then \n" + "-->Chronic infection\n" +
                    "Malignancy\n" +
                    "Chronic renal disease.");
        } else if (mcv1.equals("HIGH MCV") && value1.equals("Normal B12 level, reduced folate level")) {
            TextArea.append("Diagnosis:\n");

            TextArea.append("Anemia due to folic acid deficiency.\n");
        } else if (mcv1.equals("HIGH MCV") && value1.equals("Normal folate level, reduced B12 level")) {
            TextArea.append("Diagnosis:\n");

            TextArea.append(
                    "Perform Schilling test. If the intrinsic\n factor is reduced: Pernicious anemia,\n however, if the intrinsic factor is normal,\n investigate gastrointestinal pathology.");
        } else if (mcv1.equals("HIGH MCV") && value1.equals("Normal folate level and B12 level")) {
            TextArea.append("Diagnosis:\n");

            TextArea.append("Consider:\n" +
                    "Hepatic disease\n" +
                    "Drug-induced anemia\n" +
                    "Hypothroidism\n" +
                    "Reticulocytosis.");

        }
        //        TextArea.append("HII " + mcv1 + " Hello " + value1 + "\n\n");
    }//GEN-LAST:event_submitActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        String value1 = (String) value.getSelectedItem();
        //        value.setSelectedItem(null);
        TextArea.setText(null);
        //        value.setSelectedItem(null);
    }//GEN-LAST:event_resetActionPerformed

    private void mcvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcvActionPerformed
        // TODO add your handling code here:
        try {
            if (mcv.getSelectedItem().equals("LOW MCV")) {
                //            value.setSelectedItem(null);
                value.removeAllItems();
                value.addItem("Make a selection");
                value.addItem("Fertin Level is Normal or High");
                value.addItem("Fertin Level is Low");

            } else if (mcv.getSelectedItem().equals("NORMAL MCV")) {
                value.removeAllItems();
                value.addItem("Make a selection");
                value.addItem("Increased Reticulocyte count");
                value.addItem("Low Reticulocyte count");

            }

            else if (mcv.getSelectedItem().equals("HIGH MCV")) {
                value.removeAllItems();
                value.addItem("Make a selection");
                value.addItem("Normal B12 level, reduced folate level");
                value.addItem("Normal folate level, reduced B12 level");
                value.addItem("Normal folate level and B12 level");

            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_mcvActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mavenproject1.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mavenproject1.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mavenproject1.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mavenproject1.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mavenproject1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> mcv;
    private javax.swing.JButton reset;
    private javax.swing.JButton submit;
    private javax.swing.JComboBox<String> value;
    // End of variables declaration//GEN-END:variables
}
